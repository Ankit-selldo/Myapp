# Name of your application. Used to uniquely configure containers.
service: crazyshop

# Name of the container image.
image: crazyshopdemo/crazyshop

# Deploy to these servers.
servers:
  web:
    hosts:
      - 1.2.3.4 # <-- Replace with your actual server IP when ready
    labels:
      traefik.http.routers.crazyshop.rule: Host(`crazyshop-demo.com`)
      traefik.http.routers.crazyshop.entrypoints: websecure
      traefik.http.routers.crazyshop.tls: true
      traefik.http.routers.crazyshop.tls.certresolver: letsencrypt

# Enable SSL auto certification via Let's Encrypt
proxy:
  ssl: true
  host: app.example.com

# Credentials for your image host.
registry:
  username:
    - DOCKER_USERNAME
  password:
    - DOCKER_PASSWORD

# Inject ENV variables into containers
env:
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_URL
    - REDIS_URL
    - SMTP_HOST
    - SMTP_PORT
    - SMTP_DOMAIN
    - SMTP_USERNAME
    - SMTP_PASSWORD
    - APP_NAME
    - APP_HOST
  clear:
    RAILS_ENV: production
    RAILS_LOG_TO_STDOUT: true
    RAILS_SERVE_STATIC_FILES: true

# Aliases for common commands
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"

# Use a persistent storage volume
volumes:
  - /var/lib/crazyshop/storage:/app/storage

# Configure the image builder
builder:
  arch: amd64
  args:
    RUBY_VERSION: 3.4.3
