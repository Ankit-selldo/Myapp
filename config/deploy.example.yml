service: my_app
image: your-docker-username/my_app
registry: docker.io

servers:
  web:
    hosts:
      - 192.168.1.100
    labels:
      traefik.http.routers.my_app.rule: Host(`example.com`)
      traefik.http.routers.my_app.entrypoints: websecure
      traefik.http.routers.my_app.tls: true
      traefik.http.routers.my_app.tls.certresolver: letsencrypt

env:
  clear:
    RAILS_ENV: production
    RAILS_LOG_TO_STDOUT: true
    RAILS_SERVE_STATIC_FILES: true
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_URL
    - REDIS_URL
    - SMTP_HOST
    - SMTP_PORT
    - SMTP_DOMAIN
    - SMTP_USERNAME
    - SMTP_PASSWORD
    - APP_NAME
    - APP_HOST

volumes:
  - /var/lib/my_app/storage:/app/storage

healthcheck:
  path: /up
  port: 3000
  max_attempts: 10
  interval: 30s
  timeout: 5s

rolling_deploy: true
rolling_deploy_wait_time: 30

registry:
  username:
    - DOCKER_USERNAME
  password:
    - DOCKER_PASSWORD

accessories:
  db:
    image: postgres:latest
    host: 192.168.1.100
    port: 5432
    env:
      clear:
        POSTGRES_DB: my_app_production
      secret:
        - POSTGRES_PASSWORD
    volumes:
      - /var/lib/my_app/postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    host: 192.168.1.100
    port: 6379
    volumes:
      - /var/lib/my_app/redis:/data 